/*
Covid 19 Data Exploration

Skills: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types
Source: https://ourworldindata.org/covid-deaths
*/


SELECT * 
FROM `my-project-temp-tables-435302.covid_data.covid_deaths`
WHERE continent is not null
ORDER BY 3,4


-- Select data we are starting with and order results by location and date

SELECT location, date, total_cases, new_cases, total_deaths, population
From `my-project-temp-tables-435302.covid_data.covid_deaths`
WHERE continent is not null
order by 1,2


-- Likelihood of dying if you contract COVID 
-- Looking at Total Cases vs. Total Deaths (by country)

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 
AS DeathPercentage
FROM `my-project-temp-tables-435302.covid_data.covid_deaths`
WHERE continent is not null
ORDER BY 1, 2


-- Looking at Total Cases vs. Total Deaths (in USA)

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 
AS DeathPercentage
FROM `my-project-temp-tables-435302.covid_data.covid_deaths`
WHERE location like '%States%'
and continent is not null
ORDER BY 1, 2


-- Percentage of population infected with COVID
-- Looking at Total Cases vs. Total Population (by country)

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100
AS PercentPopulationInfected
FROM `my-project-temp-tables-435302.covid_data.covid_deaths`
WHERE continent is not null
ORDER BY 1, 2


-- Looking at Total Cases vs. Population (in USA)

SELECT location, date, population, total_cases,
CASE WHEN total_cases > 0 THEN (total_deaths / total_cases) *100
ELSE 0
END AS PercentPopulationInfected
FROM `my-project-temp-tables-435302.covid_data.covid_deaths`
WHERE continent is not null
AND location like '%United States%'
ORDER BY 1, 2


-- Countries with highest infection rate relative to the population

SELECT location, population, MAX(total_cases) AS PercentPopulationInfected,
FROM `my-project-temp-tables-435302.covid_data.covid_deaths`
Group by Location, Population
Order by PercentPopulationInfected desc


-- Countries with highest death count relative to the population

SELECT location, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM `my-project-temp-tables-435302.covid_data.covid_deaths`
WHERE continent is not null
GROUP BY location
ORDER BY TotalDeathCount DESC;


-- BREAKING THINGS DOWN BY CONTINENT
-- Showing continents with highest death count relative to the population

SELECT continent, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM `my-project-temp-tables-435302.covid_data.covid_deaths`
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount DESC;


-- GLOBAL NUMBERS

SELECT SUM(new_cases) AS total_cases, SUM(CAST(new_deaths AS INT)) AS total_deaths,
SUM(CAST(new_deaths AS INT))/SUM(new_cases)*100 AS DeathPercentage
FROM `my-project-temp-tables-435302.covid_data.covid_deaths`
WHERE continent IS NOT NULL
ORDER BY 1, 2


-- Total Population vs. Vaccinations 
-- Percentage of population that received at least one COVID vaccine

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM `my-project-temp-tables-435302.covid_data.covid_deaths` dea
JOIN `my-project-temp-tables-435302.covid_data.covid_vaccinations` vac
 	ON dea.location = vac.location
 	AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2, 3


-- Using CTE to perform calculation on Partition By in previous query

WITH PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
AS
(
SELECT dea.continent, dea.location, dea.date,dea.population, vac.new_vaccinations, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM `my-project-temp-tables-435302.covid_data.covid_deaths` dea
JOIN `my-project-temp-tables-435302.covid_data.covid_vaccinations` vac
ON dea.location = vac.location
   	AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
--ORDER BY 2,3
)
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM PopvsVac


â€“ Use Temp Table to perform calculation on Partition By in previous query
-- Using Temp Table to perform Calculation on Partition By in previous query

DROP TABLE IF EXISTS #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM `my-project-temp-tables-435302.covid_data.covid_deaths` dea
JOIN `my-project-temp-tables-435302.covid_data.covid_vaccinations` vac
ON dea.location = vac.location
AND dea.date = vac.date
--where dea.continent is not null
--order by 2,3

SELECT *, (RollingPeopleVaccinated/Population)*100
FROM #PercentPopulationVaccinated


-- Creating View to store data for later visualizations

CREATE VIEW PercentPopulationVaccinated AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location ORDER BY dea.location, dea.Date) AS RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM `my-project-temp-tables-435302.covid_data.covid_deaths` dea
JOIN `my-project-temp-tables-435302.covid_data.covid_vaccinations` vac
ON dea.location = vac.location
AND dea.date = vac.date
WHERE dea.continent IS NOT NULL


